# The following types define the data model of the example service
# based on which the GraphQL API is generated

# type User @model {
#   id: ID! @isUnique
#   name: String
#   dateOfBirth: DateTime
#
#   # Uncomment below - you can declare relations between models like this
#
#   # posts: [Post!]! @relation(name: "UserPosts")
# }


# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }

type Item @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String! @isUnique
  upc: [String!]
  pantry: [PantryItem!]! @relation(name: "PantryItems")
  shoppingList: [ShoppingList!]! @relation(name: "ShoppingListItems")
  recipes: [Recipe!]! @relation(name: "RecipeIngredients")
}

type PantryItem @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  qty: Int!
  item: Item! @relation(name: "PantryItems")
}

type ShoppingList @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  qty: Int!
  item: Item! @relation(name: "ShoppingListItems")
}

type Recipe @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  description: String!
  ingredients: [Item!]! @relation(name: "RecipeIngredients")
}
